<unk>
<s>
</s>
Token.Literal.Number.Integer7
synchronized
Token.Literal.Number.Float0
throws
Token.Name.Attribute21
for
Token.Literal.Number.Hex13
Token.Literal.String4
Token.Literal.Number.Hex3
private
Token.Literal.String.Char10
Token.Name.Attribute7
Token.Name17
Token.Literal.Number.Oct0
Token.Name.Attribute20
Token.Literal.String19
~
Token.Name14
Token.Literal.String9
Token.Name.Function1
char
Token.Literal.Number.Hex12
Token.Name.Attribute17
Token.Literal.Number.Integer19
/
Token.Literal.Number.Integer14
Token.Name9
Token.Name18
Token.Literal.String2
Token.Literal.Number.Hex0
Token.Name.Class1
Token.Literal.String23
Token.Name.Attribute0
new
Token.Literal.Number.Hex1
Token.Literal.String20
break
Token.Name.Attribute22
extends
Token.Literal.String.Char5
!
Token.Literal.Number.Integer4
Token.Name.Attribute16
Token.Literal.Number.Float2
Token.Name2
}
Token.Literal.Number.Integer16
Token.Name.Attribute4
Token.Literal.Number.Integer9
Token.Literal.String21
)
Token.Name3
Token.Literal.Number.Integer15
Token.Literal.Number.Integer1
Token.Literal.String14
Token.Literal.String13
Token.Name31
.
=
Token.Literal.Number.Integer11
short
+
Token.Name26
Token.Literal.String0
double
Token.Name0
protected
[
Token.Literal.Number.Oct1
Token.Name.Function5
Token.Literal.Number.Float1
instanceof
?
Token.Name24
Token.Literal.Number.Float3
Token.Name.Attribute12
Token.Name30
Token.Name32
Token.Name15
Token.Literal.Number.Hex2
Token.Name.Attribute2
Token.Literal.String18
Token.Literal.String.Char4
Token.Literal.Number.Float5
%
final
Token.Name.Attribute6
continue
static
Token.Literal.String11
this
long
Token.Name12
null
Token.Literal.String25
Token.Name4
finally
boolean
Token.Literal.Number.Float6
Token.Literal.Number.Hex6
Token.Literal.String3
Token.Literal.Number.Hex15
Token.Literal.String.Char3
Token.Name33
Token.Literal.String.Char14
default
implements
Token.Literal.Number.Integer8
else
Token.Literal.Number.Float4
Token.Literal.Number.Integer0
throw
return
|
try
Token.Literal.Number.Oct2
Token.Literal.Number.Integer6
Token.Name.Function3
catch
Token.Name.Attribute11
Token.Literal.String.Char13
Token.Name16
Token.Literal.String.Char6
Token.Literal.Number.Integer3
Token.Name.Attribute3
float
Token.Literal.Number.Hex5
Token.Literal.String27
Token.Name8
Token.Literal.String.Char19
Token.Literal.Number.Hex8
Token.Literal.String.Char15
Token.Name6
Token.Literal.String.Char9
public
byte
void
'
Token.Name.Attribute18
Token.Literal.String24
<
class
Token.Literal.Number.Hex14
*
Token.Name27
]
Token.Literal.String6
Token.Literal.Number.Float7
-
{
Token.Literal.Number.Hex9
Token.Literal.String12
Token.Name.Label0
Token.Literal.String5
Token.Name.Attribute10
Token.Literal.Number.Oct3
Token.Literal.Number.Integer17
Token.Literal.String8
Token.Name.Attribute8
Token.Name.Class0
Token.Name19
Token.Name.Function0
Token.Name23
EOL
;
Token.Name29
Token.Literal.String.Char16
Token.Name25
Token.Literal.Number.Float8
Token.Literal.String28
Token.Literal.String26
&
Token.Literal.String16
Token.Literal.Number.Integer10
assert
>
super
Token.Literal.String17
do
int
Token.Name28
Token.Literal.Number.Hex11
false
Token.Literal.String.Char8
Token.Literal.String.Char2
case
Token.Name22
Token.Literal.String22
Token.Literal.Number.Integer12
Token.Literal.Number.Float9
Token.Literal.String15
Token.Literal.Number.Integer18
(
Token.Literal.String.Char17
Token.Literal.String.Char0
if
:
Token.Literal.String1
Token.Literal.Number.Integer13
Token.Name.Attribute15
Token.Literal.String.Char1
Token.Literal.String10
Token.Literal.String.Char11
Token.Name.Attribute13
Token.Name10
switch
while
Token.Name.Attribute5
Token.Name13
Token.Name7
Token.Name11
Token.Literal.String.Char12
Token.Literal.Number.Hex4
Token.Name.Attribute19
Token.Literal.String.Char18
Token.Name1
Token.Literal.String.Char7
true
Token.Name20
Token.Name.Function2
Token.Name.Attribute9
Token.Name.Function4
Token.Literal.String7
Token.Name5
Token.Name.Attribute14
Token.Literal.Number.Hex10
^
Token.Name.Attribute1
\
Token.Literal.Number.Integer5
Token.Name21
WHITE_SPACE
Token.Literal.Number.Hex7
Token.Literal.Number.Integer2
,
